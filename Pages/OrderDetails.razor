@page "/orders/{OrderId:int}"
@using Pos1988.Data

<h1>Detalles de la Orden</h1>

<p>
</p>

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Precio</th>
            <th>Cantidad</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var orderItem in order.OrderItems)
        {
            <tr>
                <td>@orderItem.MenuItem.Name</td>
                <td>@orderItem.MenuItem.Price.ToString("C")</td>
                <td>
                    <input type="number" min="1" value="@orderItem.Quantity"
                       @onchange="(e) => UpdateQuantity(orderItem, e.Value)" />
                </td>
            </tr>
        }
    </tbody>
</table>

<p>
    <strong>Total:</strong> @order.Total.ToString("C")
</p>

@code {
    [Parameter] public int OrderId { get; set; }
    private Order order;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            // Cálculo del total
            order.Total = order.OrderItems.Sum(i => i.MenuItem.Price * i.Quantity);
        }
        catch (Exception ex)
        {
            errorMessage = ex.Message;
        }
    }

    private void UpdateQuantity(OrderItem orderItem, object quantity)
    {
        if (int.TryParse(quantity.ToString(), out int newQuantity) && newQuantity > 0)
        {
            orderItem.Quantity = newQuantity;
            UpdateTotal();
        }
    }

    private void UpdateTotal()
    {
        order.Total = order.OrderItems.Sum(item => item.MenuItem.Price * item.Quantity);
    }

    // ... Función de carga de la orden (LoadOrderFromAPI)
}
