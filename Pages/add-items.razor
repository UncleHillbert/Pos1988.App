@page "/orders/{OrderId:int}/add-items" 
@using Pos1988.Data;

<h1>Agregar Artículos a la Orden</h1>

<div class="row">
    <div class="col-md-6">
        <h2>Menú Disponible</h2> 
        <ul class="list-group">
            @foreach (var menuItem in availableMenuItems) 
            {
                <li class="list-group-item">
                    <input type="checkbox" name="items" value="@menuItem.Id" 
                           @bind="menuItem.IsSelected" /> 
                    @menuItem.Name - @menuItem.Price.ToString("C") 
                </li> 
            }
        </ul>
    </div>
    <div class="col-md-6">
        <h2>Detalles de la Orden</h2>
        <table class="table">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Precio</th>
                    <th>Cantidad</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var orderItem in order.OrderItems)
                {
                    <tr>
                        <td>@orderItem.MenuItem.Name</td>
                        <td>@orderItem.MenuItem.Price.ToString("C")</td>
                        <td><input type="number" value="@orderItem.Quantity" 
                                   @onchange="(e) => UpdateQuantity(orderItem, e.Value)" /></td>
                    </tr>
                }
            </tbody>
        </table>
        <p>
            <strong>Total:</strong> @order.Total.ToString("C")
        </p>
        <button class="btn btn-primary" @onclick="ConfirmOrder">Confirmar Orden</button>
    </div>
</div>

@code {
    [Parameter] public int OrderId { get; set; }
    private List<MenuItem> availableMenuItems;
    private Order order;
    private List<MenuItem> selectedItems = new List<MenuItem>();

    protected override async Task OnInitializedAsync()
    {
        availableMenuItems = await LoadMenuItemsFromAPI(); // Replace with your API call
        order = await LoadOrderFromAPI(OrderId); // Replace with your API call
    }

    private void HandleItemChange() // Simplified selection handling 
    {
        selectedItems = availableMenuItems.Where(item => item.IsSelected).ToList();

        // ... Update order.OrderItems based on 'selectedItems'
    }

    private void UpdateQuantity(OrderItem orderItem, object quantity)
    {
        // Logic to update the orderItem.Quantity
        // Recalculate order.Total 
    }

    private async Task ConfirmOrder()
    {
        // ... Update order in API based on 'order' & 'selectedItems'

        await UpdateOrderInAPI(order); // Replace with your API call
    }

    // .... API Fetching Logic (LoadMenuItemsFromAPI, etc.)
}
